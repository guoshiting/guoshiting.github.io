<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>hexo-next新增文章</title>
    <url>/2022/09/19/hexo-next%E6%96%B0%E5%A2%9E%E6%96%87%E7%AB%A0/</url>
    <content><![CDATA[<h1 id="hexo-next新增文章"><a href="#hexo-next新增文章" class="headerlink" title="hexo-next新增文章"></a>hexo-next新增文章</h1><span id="more"></span>

<ul>
<li><h2 id="安装hexo"><a href="#安装hexo" class="headerlink" title="安装hexo"></a>安装hexo</h2><blockquote>
<p>1.安装node.js和git</p>
<p>2.安装hexo</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">#安装hexo</span><br><span class="line">npm install -g hexo</span><br><span class="line">#新建自己的项目文件夹(myproject)并进入自己的项目文件夹</span><br><span class="line">cd myproject</span><br><span class="line">hexo init</span><br><span class="line">#安装依赖</span><br><span class="line">npm install</span><br><span class="line">#hexo编译和启动</span><br><span class="line">hexo g</span><br><span class="line">hexo s</span><br><span class="line">#访问http://localhost:4000,查看hexo是否搭建成功</span><br></pre></td></tr></table></figure>
</blockquote>
<h1 id="安装hexo-next"><a href="#安装hexo-next" class="headerlink" title="安装hexo-next"></a>安装hexo-next</h1><blockquote>
<p>1.安装hexo-next插件</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&gt;#先myproject目录下执行</span><br><span class="line">&gt;git clone https://github.com/theme-next/hexo-theme-next.git</span><br><span class="line">&gt;#修改myproject目录下的_conf.yml</span><br><span class="line">&gt;theme: next</span><br></pre></td></tr></table></figure></blockquote>
</li>
</ul>
<p><img src="/pictures/update_hexo_config.png" alt="alt 修改config"></p>
<ul>
<li><h1 id="新建文章"><a href="#新建文章" class="headerlink" title="新建文章"></a>新建文章</h1><blockquote>
<p>1.新建文章(文章名称:doc)</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">hexo new doc</span><br></pre></td></tr></table></figure>

<p>2.使用markdown编辑器修改文章</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">#文章目录</span><br><span class="line">/myproject/_posts/doc</span><br></pre></td></tr></table></figure>
</blockquote>
</li>
<li><h1 id="发布文章"><a href="#发布文章" class="headerlink" title="发布文章"></a>发布文章</h1><blockquote>
<p>1.修改myproject目录下的_conf.yml配置文件</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">#修改deploy属性</span><br></pre></td></tr></table></figure>

<p><img src="/pictures/update_display_config.jpg" alt="alt 修改config"></p>
<p>2.发布命令</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">hexo d</span><br></pre></td></tr></table></figure></blockquote>
</li>
</ul>
]]></content>
      <categories>
        <category>hexo</category>
      </categories>
      <tags>
        <tag>hexo</tag>
      </tags>
  </entry>
  <entry>
    <title>自动注入@Autowired和@Resource</title>
    <url>/2022/09/19/%E8%87%AA%E5%8A%A8%E6%B3%A8%E5%85%A5-Autowired%E5%92%8C-Resource/</url>
    <content><![CDATA[<h1 id="自动注入-Autowired和-Resource"><a href="#自动注入-Autowired和-Resource" class="headerlink" title="自动注入@Autowired和@Resource"></a>自动注入@Autowired和@Resource</h1><span id="more"></span>

<h4 id="1-来源不同"><a href="#1-来源不同" class="headerlink" title="1.来源不同"></a>1.来源不同</h4><blockquote>
<ul>
<li>@Autowired来自Spring，全路径类名为：org.springframework.beans.factory.annotation.Autowired</li>
<li>@Resource 来自JDK，全路径类名为：javax.annotation.Resource</li>
</ul>
</blockquote>
<h4 id="2-注入方式不同"><a href="#2-注入方式不同" class="headerlink" title="2.注入方式不同"></a>2.注入方式不同</h4><blockquote>
<p><del>大家的常识似乎为@Autowired是根据类型注入的，如果两个类实现同一个接口就不能用@Autowired</del>，<strong>但这个常识是错误的</strong></p>
<p>@Autowired的注入方式为：</p>
<ul>
<li>如果查询结果刚好为一个，就将该bean装配给@Autowired指定的数据</li>
<li>如果查询的结果不止一个，先根据 @Primary 来决策，其次是 @Priority 决策优先级</li>
<li>最后是根据 Bean 名字的严格匹配来决策</li>
</ul>
<p><img src="/pictures/autowire.png" alt="alt 修改config"></p>
<p>@Resource的注入方式为：</p>
<ul>
<li>如果没有指定name和type属性的话，默认首先使用属性名称作为bean name进行注入，如果查询不到，则使用属性的类型进行查找注入</li>
<li>如果指定了name和type其中一个，就按照指定的来进行注入，找不到或者找到多个，都会抛出异常</li>
<li>如果同时指定了name和type，则从Spring上下文中找到唯一匹配（类型和名称同时匹配）的bean进行装配，找不到则抛出异常</li>
</ul>
</blockquote>
<h4 id="其他方面"><a href="#其他方面" class="headerlink" title="其他方面"></a>其他方面</h4><blockquote>
<ul>
<li><p>如果@Autowired想指定名称注入的话，一般用@Autowired+@Qualifie(“beanName”)的方式</p>
</li>
<li><p>@Autowired与@Resource都可以用来装配bean. 都可以写在字段上,或写在setter方法上。</p>
</li>
<li><p>@Autowired默认情况下必须要求依赖对象必须存在，如果要允许null值，可以设置它的required属性为false（@Autowired(required&#x3D;false)</p>
</li>
</ul>
</blockquote>
]]></content>
      <categories>
        <category>spring初识</category>
      </categories>
      <tags>
        <tag>Spring</tag>
      </tags>
  </entry>
  <entry>
    <title>JAVA程序打war包-idea</title>
    <url>/2022/09/19/JAVA%E7%A8%8B%E5%BA%8F%E6%89%93war%E5%8C%85-idea/</url>
    <content><![CDATA[<h1 id="JAVA程序打war包-idea"><a href="#JAVA程序打war包-idea" class="headerlink" title="JAVA程序打war包(idea)"></a>JAVA程序打war包(idea)</h1><span id="more"></span>

<ul>
<li><h2 id="war包设置"><a href="#war包设置" class="headerlink" title="war包设置"></a>war包设置</h2><blockquote>
<p>1.File -&gt; Project Structure</p>
</blockquote>
</li>
</ul>
<p><img src="/pictures/2-1.png" alt="alt 2-1"></p>
<p><img src="/pictures/2-2.png" alt="alt 2-2"></p>
<ul>
<li><h2 id="war包编译设置"><a href="#war包编译设置" class="headerlink" title="war包编译设置"></a>war包编译设置</h2></li>
</ul>
<blockquote>
<p>1.设置工程打包路径</p>
</blockquote>
<p><img src="/pictures/2-3.png" alt="alt 2-3"></p>
<blockquote>
<p>2.加入class和lib</p>
</blockquote>
<p><img src="/pictures/2-4.png" alt="alt 2-4"></p>
<p><img src="/pictures/2-5.png" alt="alt 2-5"></p>
<ul>
<li><h2 id="打包"><a href="#打包" class="headerlink" title="打包"></a>打包</h2></li>
</ul>
<blockquote>
<p>Build -&gt; Build Artifacts -&gt; Build</p>
</blockquote>
<p><img src="/pictures/2-6.png" alt="alt 2-6"></p>
<p><img src="/pictures/2-7.png" alt="alt 2-7"></p>
<ul>
<li><h2 id="注意设置java编译路径"><a href="#注意设置java编译路径" class="headerlink" title="注意设置java编译路径"></a>注意设置java编译路径</h2></li>
</ul>
<blockquote>
<p>1.File -&gt; Project Structure -&gt; Project</p>
</blockquote>
<p><img src="/pictures/2-8.jpg" alt="alt 2-8"></p>
]]></content>
      <categories>
        <category>idea使用</category>
      </categories>
      <tags>
        <tag>IDEA</tag>
      </tags>
  </entry>
</search>
